syntax = "proto3";

package replicateddatabase;

message ArgsVote {
    uint32 term = 1;
    uint32 candidateId = 2;
    int32 lastLogIndex = 3;
    int32 lastLogTerm = 4;
} 

message RetVote {
    bool voteGranted = 1;
    uint32 term = 2;
}

message ArgsAppend{
    uint32 term = 1;
    uint32 leaderId = 2;
    uint32 logIndex = 3;
    int32 prevLogTerm = 4;
    string entry = 5;
    int32 leaderCommitIndex = 6;
}

message RetAppend {
    uint32 term = 1;
    bool success = 2;
}

message ArgsAck {
    uint32 reqNo = 1;
    bool processed = 2;
}

message ArgsRequest {
    uint32 clientId = 1;
    uint32 reqNo = 2;
    uint32 key = 3;
    uint32 val = 4;
    string type = 5;
}

message RetRequest {
    uint32 val = 1;
    bool success = 2;
}

message ArgsMemberAdd {
    uint32 machineNo = 1;
}

message RetMemberAdd {
    bool success = 1;
}

message ArgsMemberAddAck {
    bool success = 1;
}

message Empty {}

service RaftBook {
    rpc RequestVote(ArgsVote) returns (RetVote) {}
    rpc AppendEntries(ArgsAppend) returns (RetAppend) {}
    rpc ClientRequest(ArgsRequest) returns (RetRequest) {}
    rpc AddMember(ArgsMemberAdd) returns (RetMemberAdd) {}
}

service MemberBook {
    rpc AddMemberAck(ArgsMemberAddAck) returns (Empty) {}
}

service ClientBook {
    rpc ClientAck(ArgsAck) returns (Empty) {}
}